#include <stdio.h>
#include <stdbool.h>

#define N 10

int board[N][N];
int count = 0;

bool isSafe(int row, int col, int n) {
    for (int i = 0; i < row; i++) {
        if (board[i][col] == 1) {
            return false;
        }
    }

    for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j] == 1) {
            return false;
        }
    }

    for (int i = row, j = col; i >= 0 && j < n; i--, j++) {
        if (board[i][j] == 1) {
            return false;
        }
    }

    return true;
}

void solveNQueens(int row, int n) {
    if (row == n) {
        printf("Solution %d:\n", ++count);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                printf("%d ", board[i][j]);
            }
            printf("\n");
        }
        printf("\n");
        return;
    }

    for (int col = 0; col < n; col++) {
        if (isSafe(row, col, n)) {
            board[row][col] = 1;
            solveNQueens(row + 1, n);
            board[row][col] = 0;
        }
    }
}

int main() {
	printf("B. MAHESH REDDY \n 192210708\n");
    int n;
    printf("Enter the number of queens (N): ");
    scanf("%d", &n);

    if (n <= 0 || n > N) {
        printf("Invalid input! Please enter a number between 1 and %d.\n", N);
        return 1;
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            board[i][j] = 0;
        }
    }

    solveNQueens(0, n);

    if (count == 0) {
        printf("No solutions found for %d queens.\n", n);
    } else {
        printf("Total solutions found: %d\n", count);
    }

    return 0;
}
